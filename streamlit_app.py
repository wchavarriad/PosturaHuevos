import streamlit as st

# Base de datos simulada de usuarios
USUARIOS = {
    "admin": {"password": "1234", "rol": "Administrador"},
    "usuario1": {"password": "abcd", "rol": "Usuario"},
    "invitado": {"password": "0000", "rol": "Invitado"},
}

# Funci√≥n para validar credenciales
def validar_usuario(usuario, contrase√±a):
    return usuario in USUARIOS and USUARIOS[usuario]["password"] == contrase√±a

# Inicializar sesi√≥n
if "autenticado" not in st.session_state:
    st.session_state.autenticado = False
if "usuario" not in st.session_state:
    st.session_state.usuario = ""
if "rol" not in st.session_state:
    st.session_state.rol = ""

# P√°gina de login
if not st.session_state.autenticado:
    st.set_page_config(page_title="Control de Accesos", layout="centered")
    st.title("üîê Sistema de Control de Accesos")

    with st.form("login_form"):
        st.subheader("Iniciar Sesi√≥n")
        usuario = st.text_input("Usuario")
        contrase√±a = st.text_input("Contrase√±a", type="password")
        submit = st.form_submit_button("Acceder")

    if submit:
        if validar_usuario(usuario, contrase√±a):
            st.session_state.autenticado = True
            st.session_state.usuario = usuario
            st.session_state.rol = USUARIOS[usuario]["rol"]
            st.success("Inicio de sesi√≥n exitoso. Redirigiendo...")
            st.rerun()  # ‚úÖ USAR rerun correcto
        else:
            st.error("Credenciales incorrectas.")

# P√°gina principal despu√©s del login
else:
    st.set_page_config(page_title="Panel de Usuario", layout="wide")
    st.sidebar.title("Men√∫")
    st.sidebar.success(f"Sesi√≥n: {st.session_state.usuario} ({st.session_state.rol})")
    opcion = st.sidebar.radio("Opciones", ["Panel Principal", "Crear Funciones", "Cerrar Sesi√≥n"])

    if opcion == "Panel Principal":
        st.title("üõ†Ô∏è Panel Principal")
        if st.session_state.rol == "Administrador":
            st.info("Tienes acceso completo a todas las herramientas.")
            st.write("Aqu√≠ podr√≠as agregar gesti√≥n de usuarios, auditor√≠a, etc.")
        elif st.session_state.rol == "Usuario":
            st.info("Tienes acceso limitado a ciertas herramientas.")
            st.write("Visualizaci√≥n de reportes, acceso a funciones permitidas.")
        else:
            st.warning("Tu acceso es restringido.")
            st.write("Consulta con el administrador para m√°s permisos.")

    elif opcion == "Crear Funciones":
        st.title("üß™ Ejecutar Funci√≥n Personalizada")
        st.markdown("""
        Escribe una funci√≥n en Python y ejec√∫tala.
        Por ejemplo:
        ```python
        def mi_funcion():
            return 2 + 2
        ```
        """)

        codigo = st.text_area("C√≥digo de la funci√≥n:", height=200)
        ejecutar = st.button("Ejecutar funci√≥n")

        if ejecutar:
            try:
                exec(codigo, globals())  # define la funci√≥n en el entorno global
                nombre_funcion = codigo.strip().split("(")[0].replace("def", "").strip()
                resultado = eval(f"{nombre_funcion}()")
                st.success(f"‚úÖ Resultado de `{nombre_funcion}()`: `{resultado}`")
            except Exception as e:
                st.error(f"‚ùå Error al ejecutar la funci√≥n: {e}")

    elif opcion == "Cerrar Sesi√≥n":
        st.session_state.autenticado = False
        st.session_state.usuario = ""
        st.session_state.rol = ""
        st.rerun()
